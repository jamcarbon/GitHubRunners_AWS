import json import boto3
REGION = 'us-west-2'
# Ubuntu Server 18.04 LTS 64-bit Arm
AMI = 'ami-0a940cb939351ccca' INSTANCE_TYPE = 'm6g.large'
EC2 = boto3.client('ec2', region_name=REGION)
def lambda_to_ec2(event, context):
print "Creating instance"
instance = EC2.run_instances(
ImageId=AMI,
InstanceType=INSTANCE_TYPE,
KeyName="<your key-pair name>",
SubnetId= "<a Public subnet ID from your EKS cluster VPC>", MinCount=1, # required by boto, even though it's kinda obvious. MaxCount=1,
InstanceInitiatedShutdownBehavior='terminate', # make shutdown in script terminate ec2 TagSpecifications=[
{
'ResourceType': 'instance',
'Tags': [
{
'Key': 'Name',
'Value': '<provide a name for your instance runners>' },
] }, ],
UserData="""#!/bin/bash
service docker start
cd /home/ec2-user/actions-runner/
TOKEN=$(/usr/bin/curl --user "<GitHub username>:<GitHub PAT>" -X POST -H "Accept: application/vnd.github.v3+json" https://api. github.com/repos/<username>/<repository name>/actions/runners/registration-token | /usr/bin/jq '.token' | /usr/bin/awk -F\\" '{print $2}') echo $TOKEN > /home/ec2-user/actions-runner/token.file
/bin/chmod 755 /home/ec2-user/actions-runner/token.file
/bin/su - ec2-user -c "cd /home/ec2-user/actions-runner/; ./script.exp $(/bin/cat /home/ec2-user/actions-runner/token.file)"
/bin/su - ec2-user -c "/home/ec2-user/actions-runner/run.sh --once"
/bin/su - ec2-user -c "/home/ec2-user/actions-runner/config.sh remove --token $(/bin/cat /home/ec2-user/actions-runner/token.file)" shutdown -h now
"""
)
print "New runner instance created."
instance_id = instance['Instances'][0]['InstanceId'] print instance_id
return instance_id